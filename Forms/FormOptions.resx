<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListEmoticons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListEmoticons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACg
        BwAAAk1TRnQBSQFMAwEBAAEMAQABDAEAARIBAAESAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABSAMA
        ARIDAAEBAQABIAUAAUABFCIAAwEBAgMKAQ0DGAEhAyMBMwMoATwDKAE8AyMBMwMYASEDCgENAwEBAvQA
        AwQBBgMYASEDPQFpA1sByAFWAWIBZAHvAQABvQH2Af8BAAG9AfYB/wFWAWIBZAHvA1sByAM9AWkDGAEh
        AwQBBuwAAwgBCwMjATQDVQGyARsBiQGyAfwBAAHPAv8BAAHZAv8BAAHhAv8BAAHhAv8BAAHZAv8BAAHL
        Av8BGgGDAbEB/ANWAbMDJAE1AwkBDOQAAwcBCQMpAT4BWgJgAd4BAAG+Af4B/wEAAc8C/wEAAeEC/wEA
        AeEC/wEAAeEC/wEAAeEC/wEAAeEC/wEAAdkC/wEAAc8C/wEAAbsC/wNfAeADKQE+AwcBCdwAAwEBAgMc
        ASgBWAJbAcsBAAG0AfwB/wEAAdMC/wEAAeEC/wEAAb8B7gH/AQABjAHXAf8BAAGCAcsB/wEAAYIBywH/
        AQABjAHXAf8BAAG3AegB/wEAAeEC/wEAAc8C/wEAAbQB/AH/AVgCWwHLAxwBKAMBAQLYAAMKAQ4DQgF0
        AQYBfwHEAf4BAAHCAf4B/wEAAc8C/wEAAYwB1wH/AQABYwHLAf8BAAGMAdcB/wEAAaAB4AH/AQABoAHg
        Af8BAAGMAdcB/wEAAWMBywH/AQABkwHcAf8BAAHLAv8BAAG+Af4B/wEGAX8BxAH+A0IBdAMLAQ/YAAMY
        ASIBWQJcAckBAAGqAfQB/wEAAcAB+gH/AQABkwHcAf8BAAGiAe0B/wEAAc8C/wEAAdMC/wEAAdMC/wEA
        AdMC/wEAAdMC/wEAAc8C/wEAAZMB3AH/AQABkwHcAf8BAAG9AfoB/wEAAaoB9AH/AVgCWwHLAxgBItgA
        AyIBMgFOAV0BZwHwAQABqgH0Af8BAAGwAfMB/wEAAbAB8wH/AQABxAH9Af8BAAHJAv8BAAHOAv8BAAHO
        Av8BAAHOAv8BAAHJAv8BAAHJAv8BAAHEAf0B/wEAAaoB9AH/AQABsAHzAf8BAAGqAfQB/wFOAV0BZwHw
        AyIBMtgAAycBOgEhAXkBmwH7AQABrAH6Af8BAAGuAfUB/wEAAboB/QH/AQABwgH+Af8BAAHCAf4B/wEA
        AcIB/gH/AQABwgH+Af8BAAHCAf4B/wEAAcIB/gH/AQABwgH+Af8BAAG6Af0B/wEAAboB/QH/AQABrgH1
        Af8BAAGsAfoB/wEhAXkBmwH7AycBOtgAAycBOgEhAWcBmwH7AREBrwH6Af8BEwG0AfsB/wETAbkB/gH/
        ARMBuQH+Af8BAAGDAdAB/wEAAYMB0AH/ARMBvwL/ARMBvwL/AQABgwHQAf8BAAGDAdAB/wETAbkB/gH/
        ARMBtAH7Af8BEwG0AfsB/wERAa8B+gH/ASEBZwGbAfsDJwE62AADIgEyAU4BXQFnAfABGwGuAfsB/wEr
        AbkB/gH/ASwBvwL/ASwBvwL/AQABRQGlAf8BAAFFAaUB/wEsAb8C/wEsAb8C/wEAAUUBpQH/AQABRQGl
        Af8BLAG/Av8BKwG5Af4B/wErAbkB/gH/ARsBrgH7Af8BTgFdAWcB8AMiATLYAAMYASEBWQJcAckBFgGp
        Af0B/wFFAcIC/wFFAcIC/wFFAccC/wEAAU8BpwH/AQABTwGnAf8BRQHHAv8BRQHHAv8BAAFPAacB/wEA
        AU8BpwH/AUUBxwL/AUUBwgL/AUUBwgL/ARYBqQH9Af8BWQJcAckDGAEi2AADCgEOA0ABcAEfAX8BzQH+
        AVwByQL/AWEBzgL/AWEBzgL/ASIBmAHRAf8BIgGYAdEB/wFhAdAC/wFhAdAC/wEiAZgB0QH/ASIBmAHR
        Af8BYQHOAv8BYQHLAv8BXAHJAv8BHwF/Ac0B/gNCAXQDCgEO2AADAQECAxwBJwFYAlsBywFIAb4C/wGQ
        AdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wFI
        Ab4C/wFYAlsBywMcASgDAQEC3AADBwEJAygBPQFaAl8B2wGGAdAC/wGlAeAC/wGoAeMC/wGoAeMC/wGo
        AeMC/wGoAeMC/wGoAeMC/wGoAeMC/wGlAeAC/wGGAdAC/wFaAl8B2wMoAT0DBwEJ5AADCAELAyMBNANV
        AbIBbgGbAbIB/AHAAe4C/wHOAfQC/wHYAfkC/wHYAfkC/wHOAfQC/wG/Ae0C/wFuAZsBsgH8A1UBsgMj
        ATQDCAEL7AADBAEGAxgBIQM9AWkDWQHCA2QB7AFxAZkB0gH+AXEBmQHSAf4BXQFjAWYB7QNaAcUDPQFp
        AxgBIQMEAQb0AAMBAQIDCgENAxYBHwMiATEDJwE7AycBOwMiATEDFwEgAwoBDQMBAQLoAAFCAU0BPgcA
        AT4DAAEoAwABSAMAARIDAAEBAQABAQUAAdgXAAP/AQAB8AEDAcAJAAHgAQEBwAkAAcABAAHACQABgAEA
        AUCBAAGAAQABQAkAAcABAAHACQAB4AEBAcAJAAHwAQMBwAkACw==
</value>
  </data>
</root>