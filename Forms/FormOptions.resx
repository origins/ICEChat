<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListEmoticons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListEmoticons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACi
        BwAAAk1TRnQBSQFMAwEBAAEMAQABDAEAARIBAAESAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABSAMA
        ARIDAAEBAQABIAUAAUABFCIAAwEBAgMKAQ0DGAEhAyMBMwMoATwDKAE8AyMBMwMYASEDCgENAwEBAvQA
        AwQBBgMYASEDPQFpA1sByAFVAWIBZQHvAQABvQH2Af8BAAG9AfYB/wFVAWIBZQHvA1sByAM9AWkDGAEh
        AwQBBuwAAwgBCwMjATQDVQGyARoBjAG0AfwBAAHPAv8BAAHZAv8BAAHhAv8BAAHhAv8BAAHZAv8BAAHL
        Av8BGQGGAbMB/ANWAbMDJAE1AwkBDOQAAwcBCQMpAT4BWgJgAd4BAAG+Af4B/wEAAc8C/wEAAeEC/wEA
        AeEC/wEAAeEC/wEAAeEC/wEAAeEC/wEAAdkC/wEAAc8C/wEAAbsC/wNfAeADKQE+AwcBCdwAAwEBAgMc
        ASgBWAJbAcsBAAG0AfwB/wEAAdMC/wEAAeEC/wEAAb8B7gH/AQABjAHXAf8BAAGCAcsB/wEAAYIBywH/
        AQABjAHXAf8BAAG3AegB/wEAAeEC/wEAAc8C/wEAAbQB/AH/AVgCWwHLAxwBKAMBAQLYAAMKAQ4DQgF0
        AQYBfwHGAf4BAAHCAf4B/wEAAc8C/wEAAYwB1wH/AQABZAHLAf8BAAGMAdcB/wEAAaAB4AH/AQABoAHg
        Af8BAAGMAdcB/wEAAWQBywH/AQABkwHcAf8BAAHLAv8BAAG+Af4B/wEGAX8BxgH+A0IBdAMLAQ/YAAMY
        ASIBWQJcAckBAAGqAfQB/wEAAcAB+gH/AQABkwHcAf8BAAGiAe0B/wEAAc8C/wEAAdMC/wEAAdMC/wEA
        AdMC/wEAAdMC/wEAAc8C/wEAAZMB3AH/AQABkwHcAf8BAAG9AfoB/wEAAaoB9AH/AVgCWwHLAxgBItgA
        AyIBMgFOAV8BaAHwAQABqgH0Af8BAAGwAfMB/wEAAbAB8wH/AQABxAH9Af8BAAHJAv8BAAHOAv8BAAHO
        Av8BAAHOAv8BAAHJAv8BAAHJAv8BAAHEAf0B/wEAAaoB9AH/AQABsAHzAf8BAAGqAfQB/wFOAV8BaAHw
        AyIBMtgAAycBOgEhAXwBnQH7AQABrAH6Af8BAAGuAfUB/wEBAboB/QH/AQEBwgH+Af8BAQHCAf4B/wEB
        AcIB/gH/AQEBwgH+Af8BAQHCAf4B/wEBAcIB/gH/AQEBwgH+Af8BAQG6Af0B/wEBAboB/QH/AQABrgH1
        Af8BAAGsAfoB/wEhAXwBnQH7AycBOtgAAycBOgEhAWoBnQH7ARIBrwH6Af8BFAG0AfsB/wEUAbkB/gH/
        ARQBuQH+Af8BAAGDAdAB/wEAAYMB0AH/ARQBvwL/ARQBvwL/AQABgwHQAf8BAAGDAdAB/wEUAbkB/gH/
        ARQBtAH7Af8BFAG0AfsB/wESAa8B+gH/ASEBagGdAfsDJwE62AADIgEyAU4BXQFoAfABHAGuAfsB/wEs
        AbkB/gH/AS0BvwL/AS0BvwL/AQABRgGlAf8BAAFGAaUB/wEtAb8C/wEtAb8C/wEAAUYBpQH/AQABRgGl
        Af8BLQG/Av8BLAG5Af4B/wEsAbkB/gH/ARwBrgH7Af8BTgFdAWgB8AMiATLYAAMYASEBWQJcAckBFwGp
        Af0B/wFGAcIC/wFGAcIC/wFGAccC/wEAAVABpwH/AQABUAGnAf8BRgHHAv8BRgHHAv8BAAFQAacB/wEA
        AVABpwH/AUYBxwL/AUYBwgL/AUYBwgL/ARcBqQH9Af8BWQJcAckDGAEi2AADCgEOA0ABcAEfAX8BzwH+
        AV0ByQL/AWIBzgL/AWIBzgL/ASMBmAHRAf8BIwGYAdEB/wFiAdAC/wFiAdAC/wEjAZgB0QH/ASMBmAHR
        Af8BYgHOAv8BYgHLAv8BXQHJAv8BHwF/Ac8B/gNCAXQDCgEO2AADAQECAxwBJwFYAlsBywFJAb4C/wGQ
        AdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wGQAdkC/wFJ
        Ab4C/wFYAlsBywMcASgDAQEC3AADBwEJAygBPQFaAl8B2wGGAdAC/wGlAeAC/wGoAeMC/wGoAeMC/wGo
        AeMC/wGoAeMC/wGoAeMC/wGoAeMC/wGlAeAC/wGGAdAC/wFaAl8B2wMoAT0DBwEJ5AADCAELAyMBNANV
        AbIBbwGeAbQB/AHAAe4C/wHOAfQC/wHYAfkC/wHYAfkC/wHOAfQC/wG/Ae0C/wFvAZ4BtAH8A1UBsgMj
        ATQDCAEL7AADBAEGAxgBIQM9AWkDWQHCAmQBZgHsAXEBmwHUAf4BcQGbAdQB/gFdAWQBZwHtA1oBxQM9
        AWkDGAEhAwQBBvQAAwEBAgMKAQ0DFgEfAyIBMQMnATsDJwE7AyIBMQMXASADCgENAwEBAugAAUIBTQE+
        BwABPgMAASgDAAFIAwABEgMAAQEBAAEBBQAB2BcAA/8BAAHwAQMBwAkAAeABAQHACQABwAEAAcAJAAGA
        AQABQIEAAYABAAFACQABwAEAAcAJAAHgAQEBwAkAAfABAwHACQAL
</value>
  </data>
</root>