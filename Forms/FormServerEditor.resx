<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListEditor.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListEditor.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA6
        DwAAAk1TRnQBSQFMAgEBBAEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AKgADFAEcAwcBCQgA
        Aw4BEwM6AWADSwGOA0oBiQNKAYkDSgGJA0oBiQNKAYwDGwEmGAADAQECAwEBAggAAwIBAwMCAQMrAAQB
        BAIBAzAAA0ABbwMzAVMEAAMDAQQoAAMwAUwDLgFHAwsBDwM1AVcDYQHaA2UB4gG7AbwBuwH9AboBvAG7
        Af0BuwG9AbwB/QG7AbwBuwH9AbQBtwG2AfwBsAKxAfwDIAEvEwABAQMJAQwDDQESAxMBGgNOAZQDTgGW
        AxoBJQMVAR0DDgETAwUBBxgAAw0BEQMSARgDEgEYAxEBFwMUARwDGgElAxsBJgMQARUDBAEFAwQBBgME
        AQYQAAMBAQIEAANpAc4DXwHAAwQBBQMPARQDEgEYAjQBNQFVAzMBUgMHAQkDBQEHAwQBBQMAAQEMAAM1
        AVcDNAFUAy4BSANTAaUDKgFAAyEBMANTAaoBYQJiAc8BsQG5AbsB/wG0AbwBvQH/A1cBuANRAZwDAwEE
        EwABAQMGAQgDGAEhA1MBqgGIAaYBpQH/AWkCjQH/A1QBqwMdASoDCgEOAwQBBhAAAzQBVAM1AVcDDAEQ
        AxoBJAM1AVcBUAJPAZsCXAFZAc0BagFhAVYB4gFxAV8BUgHoAWIBWwFYAdYDUAGeAyYBOAMGAQgDBQEH
        BAADEwEaAx0BKQgAA2UBygNlAckDBAQGAQgCUAFRAZ8CBAHJAf8BKwEtAc0B/wNOAZUEAAMEAQUDAQEC
        DAADLgFIAzEBTwM2AVgDIwE0BAADMgFRAcgBtgGqAf8BwwGoAZQB/wHHAa0BmgH/AccBrgGbAf8BxQGq
        AZcB/wGkAZwBmQH4Aw0BEhgAAywBRAGUAcQBwwH/Ad4D/wGpAeIB4QH/AVkBjwGRAf8DKgFBGAADPQFn
        AaABiQFqAfkDNwFaAlUBUwGwAbMBiQFWAf0BvgGFAVEB/wG8AYABSAH/AbgBcwFEAf8BsAFrATwB/wGr
        AWUBNQH/AaoBYwE0Af8BhQFlAUYB9AMqAUEIAAMLAQ8DbQHQAy0BRQQAA2UBygNfAcEEAAJLAUwBkAIM
        Ac4B/wIMAeEB/wEQAQ8B5wH/AY4BkQHOAf8DSAGGFAADEgEZAzoBYQM2AVkDKQE+BAADLwFKAa4BhQFe
        Af8BugGBAUkB/wHCAY0BWAH/AbwBggFJAf8BrQFkAS4B/wGKAX8BbgH1Aw4BExgAAyoBQAGGArkB/wHI
        AeYB5AH/AaIBxwHGAf8BTgGAAYIB/wMeASsYAAM1AVYB1gG3AZsB/wHNAaoBjAH/AdcBtQGUAf8B0wGp
        AYQB/wHCAY8BXwH/AZUBbQFRAfcDVQGyA0MBeANOAZkBXgFcAVkBzAGmAWMBNgH/AWwBYQFaAeADAwEE
        CAADNQFVAeIB4wHiAf8DJgE5A1sBuQNcAbgDSAGEAg0BzQH/AgsB4AH/AiMB7QH/AVUBVgHIAf8B6gHu
        AegB/wHuAfEB7gH/A0gBhhQAAxcBIAM1AVYDLQFFAwMBBANKAYwBsAGJAWQB/wG8AYcBVAH/AcYBmQFt
        Af8BxgGYAWwB/wG4AYEBTgH/AY0BgQFzAfUDDgETGAADKQE+AY4BnQGZAf8BsAG0AbAB/wG2AcEBvwH/
        AaIBrAGqAf8DLQFFGAADNQFXAdIBrgGOAf8B3gG/AaIB/wHZAbkBmwH/AZABgAFuAfEDTgGUAxYBHwgA
        AwoBDgNCAXMDSwGOAZ8BXQExAf8DKAE9DAADQgFzAecB6QHmAf8CdgFyAdoBVwFYAZUB8QIGAc4B/wIJ
        AeAB/wIoAesB/wJYAYQB5gHrAe0B5AH/A4sB5gNSAaIB3gHfAd4B/wNFAXwYAAMCAQMDRAF7AcwBuQGo
        Af8BswGZAYcB/wGyAYsBZwH/AbcBkwFzAf8BuAGWAXYB/wG2AZIBcAH/AbkBqAGdAf8DDQESGAADRAF5
        AmABXQHNA1kBwgNVAbIDUAGdA04BlRgAAzUBVwHPAaYBgQH/AdwBuwGbAf8B2gG8AZ8B/wNUAa8QAAMK
        AQ0DLQFFAyUBNwJWAVQBqwI+AT0BahAAAz8BbQJqAcoB/wEEAQMBzgH/AggB3wH/AjMB6QH/A0oBiwM1
        AVYC+wH4Af8DQwF4BAADiwHmAsUBxAH/A0gBhhgAAywBRAHQAasBiAH/Az8BbQM2AVkDNwFbAzcBWwM4
        AVwDMgFRAwEBAhQAAwsBDwNYAbwDTgGWAzYBWQMnAToDMwFTA1QBrwMWAR8UAAM3AVsBxQGYAWsB/wHP
        AaoBhwH/AdQBtAGXAf8ByAGlAYcB/wNKAYwDAgEDFAADGgEkAyUBNxAAAk8BUQGcAgQBzgH/AggB3wH/
        AjYB6AH/Ak0BTgGVBAADIQEwAegC6QH/A0ABbwQAA0IBdQHNAs4B+gNxAdgDFgEfAxQBGwMUARsDFAEb
        AxQBGwMUARsDDwEUA1IBpwFbAlkBwigAAwEBAgNWAbMBYQJeAcsBVwJWAbQDTQGRA0oBiQNQAZoDTAGS
        A1cBuAMGAQgQAAMWAR8DMQFOAzABTAMwAUsDMQFPAzUBVwMFBAcBCgNQAZ4DVgGzA1UBrQNVAa0DUgGn
        AyMBNAgAAwQBBQJTAVYBsAJgAd0B/wJSAeoB/wItAdAB+wJFAUYBfwwAA1kBsgMaASUIAAMVAR0DBQEH
        A2MB1gHFAccBxgH/AccBygHJAf8BuAG6AbkB/AG3AbkBuAH8AccBygHIAf8BwAHCAcEB/wMjATMBYQFe
        AV0BywNMAZIkAAMwAUwBxwGjAYQB/wFlAmIB0AJxAXAB2wNbAcEDUwGoA1YBsgNNAZECbQFoAdoDNAFU
        EAADNAFUAywBQwMDBAQBBRAAAyoBQQGgAY0BewH2AeABwwGoAf8B2wG4AZcB/wHTAasBiAH/AzcBWwgA
        AkYBRwGAAhIB0AH/AikB5AH/AVIBUQHqAf8BYgFjAaEB9gNYAa8DXgG5A1sBtgNYAa0DUQGbA0ABbgMh
        ATAMAAMvAUkDVwG2AWkCawHdAa8BuAG3Af8BsQG5AbgB/wNiAc4DVAGsBAADDwEUAd8BwAGjAf8DGAEh
        IAADRAF7AdABqQGJAf8BhwGEAX8B6gFsAWkBZwHVA14BxgNbAb4CVQFUAa4DVgGrAX0BeAFxAeYDRAF7
        EAADPgFrAV4BWwFaAcgDMQFOAzcBWwMIAQsMAAMEAQUDWAG5AdsBvQGgAf8B2gG5AZoB/wHTAa4BjAH/
        AzUBVwgAA0gBhgInAdwB/wIlAeIB/wGQAZEB2gH/AdEB1QHHAf8B0wHXAdQB/wH6AvsB/wH+A/8D+wH/
        AeMC5AH/AcgByQHIAf8B3gHgAd8B/wNEAXkIAAM9AWgBhwGDAYIB7AGbAZMBkAH2AccBvAG0Af8ByQG9
        AbUB/wGWAY8BiwHyAYQBgwGBAesCVwFWAbYDWAG5A1oBvQMOARMgAAM6AWAB1gGsAZAB/wG7Aa0BpAH3
        AYUBgQF8AecBcQJwAdsDaQHUAWsBaQFoAdYBYQJeAcsBrwGZAYcB+AM6AWIQAAMjATMBpQFkAToB/wNV
        AbUDSAGFAxYBHgQAAxQBGwNBAnIBZwFhAeQB0QGtAYsB/wHaAbkBmgH/Ad8BwQGkAf8B1gG2AZgB/wM1
        AVcIAAMFAQcCTAFNAZMBqAGrAdIB/wH3AfoB8AH/Af0B/gH8Af8BrQGvAa4B+gNHAYEDRQF9A0UBfQNF
        AX0DQgFzAzIBUAMQARYIAANEAXsBrAGMAWIB/QG0AXQBQwH/Ab0BiAFSAf8BuQGBAUkB/wGsAWYBMgH/
        AZwBkQGAAfsDJgE4AxUBHSgAAw4BEwGVAYABbwHzAewBzwG4Af8BrQGkAZ4B9QGRAYwBhwHsAYYBgQF9
        AecBhQGBAX0B6AGOAYIBdgHuAYcBfgFzAe8DDwEUFAACWAFWAbwBrAFqAT0B/wGBAWUBSgHyAWcBYQFY
        AdwBYAFcAVgB0QGVAW0BUQH3AbkBgAFMAf8BxgGRAV4B/wHOAaMBdgH/Ac0BqQGKAf8BcQFpAWQB4AHW
        AbkBnwH/AzYBWBAAA0gBhAHtAfAB7gH/A24BzgNIAYYDHwEsIAADRAF5AacBfgFtAfwBwAGNAVsB/wHL
        AZ8BcwH/AcgBmgFsAf8BuAGAAUoB/wGZAYoBewH4AwoBDjAAAzYBWAHLAaABiAH/AecBxgGuAf8B3gHH
        AbIB/gHLAb0BpQH7AeMBxgGtAf8ByAGrAZUB/wM2AVkYAAMNARIDVQG1AacBYgE0Af8BqwFnATgB/wGx
        AW0BPgH/AbQBcQFDAf8BtAFzAUUB/wGcAWoBVQH7A1gBuQMtAUYDBAEGA1sBxAM+AWoUAANIAYQB1wHY
        AdcB/wNKAYwDRAF7AwcBCRwAA0QBeQGrAYQBeQH8AbIBggFXAf8BugGQAWkB/wG9AZQBbwH/AbkBjQFl
        Af8BogGPAYsB+QMPARQ0AAMpAT8DVAGvAXQBbAFmAeMBcwFqAWgB4gNUAa8DKQE/JAADIwE0Az4BawNI
        AYUDQwF4AzQBVAMWAR4MAAMJAQwDGgEkGAADQwF3Ac4BzwHNAf8B1wLYAf0DBwEKHAADOgFiAZoBmQGW
        AfcBtQGtAakB/wG0AawBqAH/AbMBrAGnAf8BtgGuAakB/wN/Ae0DCAELPAADDwEUAw8BFHQAA0MBdwNm
        AcwDAAEBHAABQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/4EAAcwBAQH5AZ8B+AH/
        AfIB/wHAAQEB4AEHAeABAwHQAQEBwAEBAeABBwGAAQEBMAEJAcIBAQH4AR8BgAEDARIBBwHCAQEB+AEf
        AYABAQGAAQMB4AEBAfgBHwGAAcEBwAEBAfgBAQH4AR8BgwHBAeABCAH8AQEB8AEPAYAB+QHgAYgBAAF/
        AeABBwGAAQEBgQHMAQABPwHgAQcBhwGBAYABBwEBAR8B4AEHAYMBgQGAAQMBAAEfAeABBwGCAQEBgAED
        AQABfwHgAQcBwAEBAeAB/wEAAf8B8AEPAcABAQHwAX8BAAH/AfgBHwHwATkB+AF/AQAB/wH+AX8C/wH8
        AX8L
</value>
  </data>
</root>