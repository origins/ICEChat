<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListEditor.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListEditor.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD8
        DgAAAk1TRnQBSQFMAgEBBAEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AKgADFAEcAwcBCQgA
        Aw4BEwM6AWADSwGOA0oBiQNKAYkDSgGJA0oBiQNKAYwDGwEmGAADAQECAwEBAggAAwIBAwMCAQMrAAQB
        BAIBAzAAA0ABbwMzAVMEAAMDAQQoAAMwAUwDLgFHAwsBDwM1AVcDYQHaA2EB4gG2AbcBtgH9AbUBtwG2
        Af0BtgG4AbcB/QG2AbcBtgH9AaoBrQGsAfwBpAKmAfwDIAEvEwABAQMJAQwDDQESAxMBGgNOAZQDTgGW
        AxoBJQMVAR0DDgETAwUBBxgAAw0BEQMSARgDEgEYAxEBFwMUARwDGgElAxsBJgMQARUDBAEFAwQBBgME
        AQYQAAMBAQIEAANeAc4DWgHAAwQBBQMPARQDEgEYAjQBNQFVAzMBUgMHAQkDBQEHAwQBBQMAAQEMAAM1
        AVcDNAFUAy4BSANTAaUDKgFAAyEBMANTAaoDXAHPAbEBuQG7Af8BtAG8Ab0B/wNXAbgDUQGcAwMBBBMA
        AQEDBgEIAxgBIQNTAaoBiAGmAaUB/wFkAo0B/wNUAasDHQEqAwoBDgMEAQYQAAM0AVQDNQFXAwwBEAMa
        ASQDNQFXAVACTwGbAlwBWgHNAWIBYQFcAeIBZgFfAVcB6AFgAlsB1gNQAZ4DJgE4AwYBCAMFAQcEAAMT
        ARoDHQEpCAADXQHKA1wByQMEBAYBCAJQAVEBnwIAAckB/wEmASgBzQH/A04BlQQAAwQBBQMBAQIMAAMu
        AUgDMQFPAzYBWAMjATQEAAMyAVEByAG2AaoB/wHDAagBlAH/AccBrQGaAf8BxwGuAZsB/wHFAaoBlwH/
        AZcBkgGOAfgDDQESGAADLAFEAZQBxAHDAf8B3gP/AakB4gHhAf8BVAGPAZEB/wMqAUEYAAM9AWcBkAGE
        AWoB+QM3AVoCVQFTAbABrgGJAVAB/QG+AYUBTAH/AbwBgAFDAf8BuAFuAT8B/wGwAWYBNwH/AasBYAEw
        Af8BqgFeAS8B/wF3AWUBUAH0AyoBQQgAAwsBDwNeAdADLQFFBAADXQHKA1gBwQQAAksBTAGQAgcBzgH/
        AgcB4QH/AQsBCgHnAf8BjgGRAc4B/wNIAYYUAAMSARkDOgFhAzYBWQMpAT4EAAMvAUoBrgGFAVkB/wG6
        AYEBRAH/AcIBjQFTAf8BvAGCAUQB/wGtAV8BKQH/AX8BbwFpAfUDDgETGAADKgFAAYYCuQH/AcgB5gHk
        Af8BogHHAcYB/wFJAYABggH/Ax4BKxgAAzUBVgHWAbcBmwH/Ac0BqgGMAf8B1wG1AZQB/wHTAakBhAH/
        AcIBjwFaAf8BiAFtAVEB9wNVAbIDQwF4A04BmQJcAVkBzAGmAV4BMQH/AWMCXwHgAwMBBAgAAzUBVQHi
        AeMB4gH/AyYBOQNYAbkDVwG4A0gBhAIIAc0B/wIGAeAB/wIeAe0B/wFQAVEByAH/AeoB7gHoAf8B7gHx
        Ae4B/wNIAYYUAAMXASADNQFWAy0BRQMDAQQDSgGMAbABiQFfAf8BvAGHAU8B/wHGAZkBaAH/AcYBmAFn
        Af8BuAGBAUkB/wGAAXABbAH1Aw4BExgAAykBPgGOAZ0BmQH/AbABtAGwAf8BtgHBAb8B/wGiAawBqgH/
        Ay0BRRgAAzUBVwHSAa4BjgH/Ad4BvwGiAf8B2QG5AZsB/wF+AXIBZQHxA04BlAMWAR8IAAMKAQ4DQgFz
        A0sBjgGfAVgBLAH/AygBPQwAA0IBcwHnAekB5gH/AmMBYgHaAVcBWAGAAfECAQHOAf8CBAHgAf8CIwHr
        Af8CWAFuAeYB6wHtAeQB/wNwAeYDUQGiAd4B3wHeAf8DRQF8GAADAgEDA0QBewHMAbkBqAH/AbMBmQGH
        Af8BsgGLAWIB/wG3AZMBbgH/AbgBlgFxAf8BtgGSAWsB/wG5AagBnQH/Aw0BEhgAA0QBeQNcAc0DWQHC
        A1UBsgNQAZ0DTgGVGAADNQFXAc8BpgGBAf8B3AG7AZsB/wHaAbwBnwH/A1QBrxAAAwoBDQMtAUUDJQE3
        AlYBVAGrAj4BPQFqEAADPwFtAmUBygH/AgABzgH/AgMB3wH/Ai4B6QH/A0oBiwM1AVYC+wH4Af8DQwF4
        BAADcAHmAsUBxAH/A0gBhhgAAywBRAHQAasBiAH/Az8BbQM2AVkDNwFbAzcBWwM4AVwDMgFRAwEBAhQA
        AwsBDwNYAbwDTgGWAzYBWQMnAToDMwFTA1QBrwMWAR8UAAM3AVsBxQGYAWYB/wHPAaoBhwH/AdQBtAGX
        Af8ByAGlAYcB/wNKAYwDAgEDFAADGgEkAyUBNxAAAk8BUQGcAgABzgH/AgMB3wH/AjEB6AH/Ak0BTgGV
        BAADIQEwAegC6QH/A0ABbwQAA0IBdQG1ArYB+gNfAdgDFgEfAxQBGwMUARsDFAEbAxQBGwMUARsDDwEU
        A1IBpwNZAcIoAAMBAQIDVgGzA1sBywNWAbQDTQGRA0oBiQNQAZoDTAGSA1cBuAMGAQgQAAMWAR8DMQFO
        AzABTAMwAUsDMQFPAzUBVwMFBAcBCgNQAZ4DVgGzA1UBrQNVAa0DUgGnAyMBNAgAAwQBBQJTAVUBsAJb
        Ad0B/wJNAeoB/wItAb8B+wJFAUYBfwwAA1UBsgMaASUIAAMVAR0DBQEHA2AB1gHFAccBxgH/AccBygHJ
        Af8BrgGwAa8B/AGtAa8BrgH8AccBygHIAf8BwAHCAcEB/wMjATMDWwHLA0wBkiQAAzABTAHHAaMBhAH/
        A14B0ANhAdsDWAHBA1MBqANVAbIDTQGRA2EB2gM0AVQQAAM0AVQDLAFDAwMEBAEFEAADKgFBAY0BewFx
        AfYB4AHDAagB/wHbAbgBlwH/AdMBqwGIAf8DNwFbCAACRgFHAYACDQHQAf8CJAHkAf8BTQFMAeoB/wJi
        AY0B9gNUAa8DWAG5A1YBtgNVAa0DUAGbA0ABbgMhATAMAAMvAUkDVgG2AWECYgHdAa8BuAG3Af8BsQG5
        AbgB/wNeAc4DVAGsBAADDwEUAd8BwAGjAf8DGAEhIAADRAF7AdABqQGJAf8BbwFuAWwB6gJfAV4B1QNb
        AcYDWQG+A1QBrgNWAasBagFpAWcB5gNEAXsQAAM+AWsDWwHIAzEBTgM3AVsDCAELDAADBAEFA1gBuQHb
        Ab0BoAH/AdoBuQGaAf8B0wGuAYwB/wM1AVcIAANIAYYCIgHcAf8CIAHiAf8BkAGRAdoB/wHRAdUBxwH/
        AdMB1wHUAf8B+gL7Af8B/gP/A/sB/wHjAuQB/wHIAckByAH/Ad4B4AHfAf8DRAF5CAADPQFoAXMCcAHs
        AYkBgQF9AfYBxwG8AbQB/wHJAb0BtQH/AYEBfQF7AfIBcwJxAesDVgG2A1gBuQNaAb0DDgETIAADOgFg
        AdYBrAGQAf8BpAGbAZIB9wFuAW0BawHnA2EB2wNgAdQDYAHWA1sBywGbAY4BfAH4AzoBYhAAAyMBMwGl
        AV8BNQH/A1UBtQNIAYUDFgEeBAADFAEbA0EBcgFiAmEB5AHRAa0BiwH/AdoBuQGaAf8B3wHBAaQB/wHW
        AbYBmAH/AzUBVwgAAwUBBwNMAZMBqAGrAdIB/wH3AfoB8AH/Af0B/gH8Af8BoQKiAfoDRwGBA0UBfQNF
        AX0DRQF9A0IBcwMyAVADEAEWCAADRAF7AagBjAFYAf0BtAFvAT4B/wG9AYgBTQH/AbkBgQFEAf8BrAFh
        AS0B/wGUAYwBcwH7AyYBOAMVAR0oAAMOARMBggFxAWoB8wHsAc8BuAH/AZIBjQGJAfUBeQF3AXMB7AFu
        AW0BawHnAW4BbAFqAegBeQFvAWkB7gFzAW4BZgHvAw8BFBQAAlgBVgG8AawBZQE4Af8BdQFlAU8B8gJh
        AVwB3AJcAVgB0QGIAW0BUQH3AbkBgAFHAf8BxgGRAVkB/wHOAaMBcQH/Ac0BqQGKAf8BZAFiAV8B4AHW
        AbkBnwH/AzYBWBAAA0gBhAHtAfAB7gH/A14BzgNIAYYDHwEsIAADRAF5AZgBeQFoAfwBwAGNAVYB/wHL
        AZ8BbgH/AcgBmgFnAf8BuAGAAUUB/wGOAX0BdgH4AwoBDjAAAzYBWAHLAaABiAH/AecBxgGuAf8B1AG9
        AagB/gG7AakBlwH7AeMBxgGtAf8ByAGrAZUB/wM2AVkYAAMNARIDVQG1AacBXQEvAf8BqwFiATMB/wGx
        AWgBOQH/AbQBbAE+Af8BtAFuAUAB/wGUAV8BVQH7A1gBuQMtAUYDBAEGA1sBxAM+AWoUAANIAYQB1wHY
        AdcB/wNKAYwDRAF7AwcBCRwAA0QBeQGdAXsBdAH8AbIBggFSAf8BugGQAWQB/wG9AZQBagH/AbkBjQFg
        Af8BkAGKAYYB+QMPARQ0AAMpAT8DVAGvAWQBYgFfAeMBZAFiAWEB4gNUAa8DKQE/JAADIwE0Az4BawNI
        AYUDQwF4AzQBVAMWAR4MAAMJAQwDGgEkGAADQwF3Ac4BzwHNAf8ByALJAf0DBwEKHAADOgFiAYoCiQH3
        AbUBrQGpAf8BtAGsAagB/wGzAawBpwH/AbYBrgGpAf8DbgHtAwgBCzwAAw8BFAMPARR0AANDAXcDXAHM
        AwABARwAAUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/+BAAHMAQEB+QGfAfgB/wHy
        Af8BwAEBAeABBwHgAQMB0AEBAcABAQHgAQcBgAEBATABCQHCAQEB+AEfAYABAwESAQcBwgEBAfgBHwGA
        AQEBgAEDAeABAQH4AR8BgAHBAcABAQH4AQEB+AEfAYMBwQHgAQgB/AEBAfABDwGAAfkB4AGIAQABfwHg
        AQcBgAEBAYEBzAEAAT8B4AEHAYcBgQGAAQcBAQEfAeABBwGDAYEBgAEDAQABHwHgAQcBggEBAYABAwEA
        AX8B4AEHAcABAQHgAf8BAAH/AfABDwHAAQEB8AF/AQAB/wH4AR8B8AE5AfgBfwEAAf8B/gF/Av8B/AF/
        Cw==
</value>
  </data>
</root>