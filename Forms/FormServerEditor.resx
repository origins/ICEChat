<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListEditor.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListEditor.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABy
        DwAAAk1TRnQBSQFMAgEBBAEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AKgADFAEcAwcBCQgA
        Aw4BEwM6AWADSwGOA0oBiQNKAYkDSgGJA0oBiQNKAYwDGwEmGAADAQECAwEBAggAAwIBAwMCAQMrAAQB
        BAIBAzAAA0ABbwMzAVMEAAMDAQQoAAMwAUwDLgFHAwsBDwM1AVcDYQHaA2gB4gG8Ab0BvAH9AbsBvQG8
        Af0BvAG+Ab0B/QG8Ab0BvAH9AbYBuQG4AfwBsgKzAfwDIAEvEwABAQMJAQwDDQESAxMBGgNOAZQDTgGW
        AxoBJQMVAR0DDgETAwUBBxgAAw0BEQMSARgDEgEYAxEBFwMUARwDGgElAxsBJgMQARUDBAEFAwQBBgME
        AQYQAAMBAQIEAANuAc4DYwHAAwQBBQMPARQDEgEYAjQBNQFVAzMBUgMHAQkDBQEHAwQBBQMAAQEMAAM1
        AVcDNAFUAy4BSANTAaUDKgFAAyEBMANUAaoBZAJlAc8BsQG5AbsB/wG0AbwBvQH/A1kBuANRAZwDAwEE
        EwABAQMGAQgDGAEhA1MBqgGIAaYBpQH/AWoCjQH/A1QBqwMdASoDCgEOAwQBBhAAAzQBVAM1AVcDDAEQ
        AxoBJAM1AVcBUAJPAZsBXQFcAVgBzQFtAWEBVQHiAXQBXwFPAegBZAFbAVcB1gNQAZ4DJgE4AwYBCAMF
        AQcEAAMTARoDHQEpCAADagHKA2kByQMEBAYBCAJOAVEBnwIFAckB/wEsAS4BzQH/Ak4BTwGVBAADBAEF
        AwEBAgwAAy4BSAMxAU8DNgFYAyMBNAQAAzIBUQHIAbYBqgH/AcMBqAGUAf8BxwGtAZoB/wHHAa4BmwH/
        AcUBqgGXAf8BqQGfAZsB+AMNARIYAAMsAUQBlAHEAcMB/wHeA/8BqQHiAeEB/wFaAY8BkQH/AyoBQRgA
        Az0BZwGkAYoBagH5AzcBWgJVAVMBsAG0AYkBWAH9Ab4BhQFSAf8BvAGAAUkB/wG4AXQBRQH/AbABbAE9
        Af8BqwFmATYB/wGqAWQBNQH/AYkBZQFFAfQDKgFBCAADCwEPA3UB0AMtAUUEAANqAcoDZQHBBAACSwFN
        AZACDQHOAf8CDQHhAf8BEQEQAecB/wGOAZEBzgH/A0kBhhQAAxIBGQM6AWEDNgFZAykBPgQAAy8BSgGu
        AYUBXwH/AboBgQFKAf8BwgGNAVkB/wG8AYIBSgH/Aa0BZQEvAf8BjwGBAW8B9QMOARMYAAMqAUABhgK5
        Af8ByAHmAeQB/wGiAccBxgH/AU8BgAGCAf8DHgErGAADNQFWAdYBtwGbAf8BzQGqAYwB/wHXAbUBlAH/
        AdMBqQGEAf8BwgGPAWAB/wGZAW0BUQH3AVYCVQGyA0MBeANOAZkBXwFcAVkBzAGmAWQBNwH/AXEBYgFZ
        AeADAwEECAADNQFVAeIB4wHiAf8DJgE5A18BuQNgAbgDSAGEAg4BzQH/AgwB4AH/AiQB7QH/AVYBVwHI
        Af8B6gHuAegB/wHuAfEB7gH/A0kBhhQAAxcBIAM1AVYDLQFFAwMBBANKAYwBsAGJAWUB/wG8AYcBVQH/
        AcYBmQFuAf8BxgGYAW0B/wG4AYEBTwH/AZIBgwF3AfUDDgETGAADKQE+AY4BnQGZAf8BsAG0AbAB/wG2
        AcEBvwH/AaIBrAGqAf8DLQFFGAADNQFXAdIBrgGOAf8B3gG/AaIB/wHZAbkBmwH/AZUBggFvAfEDTgGU
        AxYBHwgAAwoBDgNCAXMDSwGOAZ8BXgEyAf8DKAE9DAADQgFzAecB6QHmAf8CfQF6AdoBVwFYAZsB8QIH
        Ac4B/wIKAeAB/wIpAesB/wJYAY0B5gHrAe0B5AH/A5QB5gNVAaIB3gHfAd4B/wNFAXwYAAMCAQMDRAF7
        AcwBuQGoAf8BswGZAYcB/wGyAYsBaAH/AbcBkwF0Af8BuAGWAXcB/wG2AZIBcQH/AbkBqAGdAf8DDQES
        GAADRAF5AmQBYAHNAVoCWwHCAVUCVgGyA1ABnQNOAZUYAAM1AVcBzwGmAYEB/wHcAbsBmwH/AdoBvAGf
        Af8BVgJUAa8QAAMKAQ0DLQFFAyUBNwJWAVQBqwI+AT0BahAAAz8BbQJrAcoB/wEFAQQBzgH/AgkB3wH/
        AjQB6QH/AkoBSwGLAzUBVgL7AfgB/wNDAXgEAAGUAZUBlAHmAsUBxAH/A0kBhhgAAywBRAHQAasBiAH/
        Az8BbQM2AVkDNwFbAzcBWwM4AVwDMgFRAwEBAhQAAwsBDwFbAlgBvANOAZYDNgFZAycBOgMzAVMDVgGv
        AxYBHxQAAzcBWwHFAZgBbAH/Ac8BqgGHAf8B1AG0AZcB/wHIAaUBhwH/A0oBjAMCAQMUAAMaASQDJQE3
        EAACTgFRAZwCBQHOAf8CCQHfAf8CNwHoAf8CTQFPAZUEAAMhATAB6ALpAf8DQAFvBAADQgF1AdEC0gH6
        A3oB2AMWAR8DFAEbAxQBGwMUARsDFAEbAxQBGwMPARQBVAJSAacBXQFbAVkBwigAAwEBAgJXAVYBswFk
        AWEBYAHLAVkCWAG0A00BkQNKAYkDUAGaA0wBkgNZAbgDBgEIEAADFgEfAzEBTgMwAUwDMAFLAzEBTwM1
        AVcDBQQHAQoDUAGeAlcBVgGzA1UBrQNVAa0DUgGnAyMBNAgAAwQBBQJSAVoBsAJhAd0B/wJTAeoB/wIt
        AdQB+wJFAUYBfwwAA1wBsgMaASUIAAMVAR0DBQEHA2UB1gHFAccBxgH/AccBygHJAf8BugG8AbsB/AG5
        AbsBugH8AccBygHIAf8BwAHCAcEB/wMjATMBZAFhAV4BywNMAZIkAAMwAUwBxwGjAYQB/wFqAWUBZAHQ
        AngBdgHbA10BwQNVAagDWQGyA00BkQFyAXEBbQHaAzQBVBAAAzQBVAMsAUMDAwQEAQUQAAMqAUEBpgGQ
        AX0B9gHgAcMBqAH/AdsBuAGXAf8B0wGrAYgB/wM3AVsIAAJGAUcBgAITAdAB/wIqAeQB/wFTAVIB6gH/
        AWQBZgGnAfYDXAGvA2MBuQNfAbYDWwGtA1IBmwNAAW4DIQEwDAADLwFJA1gBtgFsAnAB3QGvAbgBtwH/
        AbEBuQG4Af8DZQHOA1QBrAQAAw8BFAHfAcABowH/AxgBISAAA0QBewHQAakBiQH/AY8BigGFAeoBcAFu
        AWwB1QNgAcYDXQG+AlcBVQGuA1YBqwGEAXwBdAHmA0QBexAAAz4BawFgAVsBWQHIAzEBTgM3AVsDCAEL
        DAADBAEFA1gBuQHbAb0BoAH/AdoBuQGaAf8B0wGuAYwB/wM1AVcIAAJIAUkBhgIoAdwB/wImAeIB/wGQ
        AZEB2gH/AdEB1QHHAf8B0wHXAdQB/wH6AvsB/wH+A/8D+wH/AeMC5AH/AcgByQHIAf8B3gHgAd8B/wNE
        AXkIAAM9AWgBjQGIAYcB7AGhAZcBkwH2AccBvAG0Af8ByQG9AbUB/wGcAZUBjwHyAYoBiQGGAesCWAFX
        AbYBWgJYAbkCXAFaAb0DDgETIAADOgFgAdYBrAGQAf8BwAGzAacB9wGMAYgBgQHnAXgCdQHbAm4BbQHU
        AXABbwFtAdYBZAFhAWABywG0AZsBigH4AzoBYhAAAyMBMwGlAWUBOwH/AVYCVQG1A0gBhQMWAR4EAAMU
        ARsDQQFyAXYBaQFhAeQB0QGtAYsB/wHaAbkBmgH/Ad8BwQGkAf8B1gG2AZgB/wM1AVcIAAMFAQcCTAFO
        AZMBqAGrAdIB/wH3AfoB8AH/Af0B/gH8Af8BsAGyAbEB+gNHAYEDRgF9A0YBfQNGAX0DQgFzAzIBUAMQ
        ARYIAANEAXsBrQGMAWQB/QG0AXUBRAH/Ab0BiAFTAf8BuQGBAUoB/wGsAWcBMwH/AZ4BkgGBAfsDJgE4
        AxUBHSgAAw4BEwGZAYIBcAHzAewBzwG4Af8BswGrAaMB9QGYAZMBjgHsAY0BiAGCAecBjQGHAYQB6AGV
        AYcBeQHuAY0BggF2Ae8DDwEUFAACWAFWAbwBrAFrAT4B/wGFAWUBSQHyAWwBYQFXAdwBYwFdAVgB0QGZ
        AW0BUQH3AbkBgAFNAf8BxgGRAV8B/wHOAaMBdwH/Ac0BqQGKAf8BdQFsAWUB4AHWAbkBnwH/AzYBWBAA
        A0gBhAHtAfAB7gH/A3UBzgNJAYYDHwEsIAADRAF5AaoBfwFuAfwBwAGNAVwB/wHLAZ8BdAH/AcgBmgFt
        Af8BuAGAAUsB/wGbAY0BfAH4AwoBDjAAAzYBWAHLAaABiAH/AecBxgGuAf8B4AHJAbQB/gHPAcABqQH7
        AeMBxgGtAf8ByAGrAZUB/wM2AVkYAAMNARIBVgJVAbUBpwFjATUB/wGrAWgBOQH/AbEBbgE/Af8BtAFy
        AUQB/wG0AXQBRgH/AZ4BbQFVAfsDWAG5Ay0BRgMEAQYBXgJbAcQDPgFqFAADSAGEAdcB2AHXAf8DSwGM
        A0QBewMHAQkcAANEAXkBrQGHAXoB/AGyAYIBWAH/AboBkAFqAf8BvQGUAXAB/wG5AY0BZgH/AaYBkQGM
        AfkDDwEUNAADKQE/AVYCVAGvAXgBbwFoAeMBeQFvAWoB4gFWAlQBrwMpAT8kAAMjATQDPgFrA0gBhQND
        AXgDNAFUAxYBHgwAAwkBDAMaASQYAANDAXcBzgHPAc0B/wHaAtsB/QMHAQocAAM6AWIBngGdAZoB9wG1
        Aa0BqQH/AbQBrAGoAf8BswGsAacB/wG2Aa4BqQH/A4MB7QMIAQs8AAMPARQDDwEUdAADQwF3A20BzAMA
        AQEcAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gQABzAEBAfkBnwH4Af8B8gH/
        AcABAQHgAQcB4AEDAdABAQHAAQEB4AEHAYABAQEwAQkBwgEBAfgBHwGAAQMBEgEHAcIBAQH4AR8BgAEB
        AYABAwHgAQEB+AEfAYABwQHAAQEB+AEBAfgBHwGDAcEB4AEIAfwBAQHwAQ8BgAH5AeABiAEAAX8B4AEH
        AYABAQGBAcwBAAE/AeABBwGHAYEBgAEHAQEBHwHgAQcBgwGBAYABAwEAAR8B4AEHAYIBAQGAAQMBAAF/
        AeABBwHAAQEB4AH/AQAB/wHwAQ8BwAEBAfABfwEAAf8B+AEfAfABOQH4AX8BAAH/Af4BfwL/AfwBfws=
</value>
  </data>
</root>