<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListEditor.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListEditor.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAs
        DwAAAk1TRnQBSQFMAgEBBAEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AKgADFAEcAwcBCQgA
        Aw4BEwM6AWADSwGOA0oBiQNKAYkDSgGJA0oBiQNKAYwDGwEmGAADAQECAwEBAggAAwIBAwMCAQMrAAQB
        BAIBAzAAA0ABbwMzAVMEAAMDAQQoAAMwAUwDLgFHAwsBDwM1AVcDYQHaA2QB4gG6AbsBugH9AbkBuwG6
        Af0BugG8AbsB/QG6AbsBugH9AbIBtQG0AfwBrgKvAfwDIAEvEwABAQMJAQwDDQESAxMBGgNOAZQDTgGW
        AxoBJQMVAR0DDgETAwUBBxgAAw0BEQMSARgDEgEYAxEBFwMUARwDGgElAxsBJgMQARUDBAEFAwQBBgME
        AQYQAAMBAQIEAANlAc4DXQHAAwQBBQMPARQDEgEYAjQBNQFVAzMBUgMHAQkDBQEHAwQBBQMAAQEMAAM1
        AVcDNAFUAy4BSANTAaUDKgFAAyEBMANTAaoBYAJhAc8BsQG5AbsB/wG0AbwBvQH/A1cBuANRAZwDAwEE
        EwABAQMGAQgDGAEhA1MBqgGIAaYBpQH/AWgCjQH/A1QBqwMdASoDCgEOAwQBBhAAAzQBVAM1AVcDDAEQ
        AxoBJAM1AVcBUAJPAZsCXAFaAc0BaAFhAVcB4gFuAV8BVQHoAWABWwFaAdYDUAGeAyYBOAMGAQgDBQEH
        BAADEwEaAx0BKQgAA2EBygNiAckDBAQGAQgCUAFRAZ8CAwHJAf8BKgEsAc0B/wNOAZUEAAMEAQUDAQEC
        DAADLgFIAzEBTwM2AVgDIwE0BAADMgFRAcgBtgGqAf8BwwGoAZQB/wHHAa0BmgH/AccBrgGbAf8BxQGq
        AZcB/wGgAZoBlwH4Aw0BEhgAAywBRAGUAcQBwwH/Ad4D/wGpAeIB4QH/AVgBjwGRAf8DKgFBGAADPQFn
        AZwBiAFqAfkDNwFaAlUBUwGwAbIBiQFUAf0BvgGFAVAB/wG8AYABRwH/AbgBcgFDAf8BsAFqATsB/wGr
        AWQBNAH/AaoBYgEzAf8BgQFlAUgB9AMqAUEIAAMLAQ8DaAHQAy0BRQQAA2EBygNcAcEEAAJLAUwBkAIL
        Ac4B/wILAeEB/wEPAQ4B5wH/AY4BkQHOAf8DSAGGFAADEgEZAzoBYQM2AVkDKQE+BAADLwFKAa4BhQFd
        Af8BugGBAUgB/wHCAY0BVwH/AbwBggFIAf8BrQFjAS0B/wGHAXwBbQH1Aw4BExgAAyoBQAGGArkB/wHI
        AeYB5AH/AaIBxwHGAf8BTQGAAYIB/wMeASsYAAM1AVYB1gG3AZsB/wHNAaoBjAH/AdcBtQGUAf8B0wGp
        AYQB/wHCAY8BXgH/AZEBbQFRAfcDVQGyA0MBeANOAZkCXAFZAcwBpgFiATUB/wFpAWABWwHgAwMBBAgA
        AzUBVQHiAeMB4gH/AyYBOQNYAbkDWQG4A0gBhAIMAc0B/wIKAeAB/wIiAe0B/wFUAVUByAH/AeoB7gHo
        Af8B7gHxAe4B/wNIAYYUAAMXASADNQFWAy0BRQMDAQQDSgGMAbABiQFjAf8BvAGHAVMB/wHGAZkBbAH/
        AcYBmAFrAf8BuAGBAU0B/wGJAX8BcAH1Aw4BExgAAykBPgGOAZ0BmQH/AbABtAGwAf8BtgHBAb8B/wGi
        AawBqgH/Ay0BRRgAAzUBVwHSAa4BjgH/Ad4BvwGiAf8B2QG5AZsB/wGLAX4BbQHxA04BlAMWAR8IAAMK
        AQ4DQgFzA0sBjgGfAVwBMAH/AygBPQwAA0IBcwHnAekB5gH/AnEBbQHaAVcBWAGQAfECBQHOAf8CCAHg
        Af8CJwHrAf8CWAF9AeYB6wHtAeQB/wODAeYDUQGiAd4B3wHeAf8DRQF8GAADAgEDA0QBewHMAbkBqAH/
        AbMBmQGHAf8BsgGLAWYB/wG3AZMBcgH/AbgBlgF1Af8BtgGSAW8B/wG5AagBnQH/Aw0BEhgAA0QBeQJd
        AVwBzQNZAcIDVQGyA1ABnQNOAZUYAAM1AVcBzwGmAYEB/wHcAbsBmwH/AdoBvAGfAf8DVAGvEAADCgEN
        Ay0BRQMlATcCVgFUAasCPgE9AWoQAAM/AW0CaQHKAf8BAwECAc4B/wIHAd8B/wIyAekB/wNKAYsDNQFW
        AvsB+AH/A0MBeAQAA4MB5gLFAcQB/wNIAYYYAAMsAUQB0AGrAYgB/wM/AW0DNgFZAzcBWwM3AVsDOAFc
        AzIBUQMBAQIUAAMLAQ8DWAG8A04BlgM2AVkDJwE6AzMBUwNUAa8DFgEfFAADNwFbAcUBmAFqAf8BzwGq
        AYcB/wHUAbQBlwH/AcgBpQGHAf8DSgGMAwIBAxQAAxoBJAMlATcQAAJPAVEBnAIDAc4B/wIHAd8B/wI1
        AegB/wJNAU4BlQQAAyEBMAHoAukB/wNAAW8EAANCAXUByQLKAfoDbAHYAxYBHwMUARsDFAEbAxQBGwMU
        ARsDFAEbAw8BFANSAacDWQHCKAADAQECA1YBswFeAl0BywNWAbQDTQGRA0oBiQNQAZoDTAGSA1cBuAMG
        AQgQAAMWAR8DMQFOAzABTAMwAUsDMQFPAzUBVwMFBAcBCgNQAZ4DVgGzA1UBrQNVAa0DUgGnAyMBNAgA
        AwQBBQJTAVUBsAJfAd0B/wJRAeoB/wItAcwB+wJFAUYBfwwAA1YBsgMaASUIAAMVAR0DBQEHA2AB1gHF
        AccBxgH/AccBygHJAf8BtgG4AbcB/AG1AbcBtgH8AccBygHIAf8BwAHCAcEB/wMjATMBXgFdAVsBywNM
        AZIkAAMwAUwBxwGjAYQB/wFiAmAB0AJrAWoB2wNaAcEDUwGoA1UBsgNNAZECaAFmAdoDNAFUEAADNAFU
        AywBQwMDBAQBBRAAAyoBQQGaAYkBeQH2AeABwwGoAf8B2wG4AZcB/wHTAasBiAH/AzcBWwgAAkYBRwGA
        AhEB0AH/AigB5AH/AVEBUAHqAf8CYgGbAfYDVgGvA1oBuQNYAbYDVwGtA1ABmwNAAW4DIQEwDAADLwFJ
        A1YBtgFlAmgB3QGvAbgBtwH/AbEBuQG4Af8DXwHOA1QBrAQAAw8BFAHfAcABowH/AxgBISAAA0QBewHQ
        AakBiQH/AYEBfgF7AeoBZwFmAWMB1QNcAcYDWgG+A1QBrgNWAasBeQFzAW4B5gNEAXsQAAM+AWsBXQJb
        AcgDMQFOAzcBWwMIAQsMAAMEAQUDWAG5AdsBvQGgAf8B2gG5AZoB/wHTAa4BjAH/AzUBVwgAA0gBhgIm
        AdwB/wIkAeIB/wGQAZEB2gH/AdEB1QHHAf8B0wHXAdQB/wH6AvsB/wH+A/8D+wH/AeMC5AH/AcgByQHI
        Af8B3gHgAd8B/wNEAXkIAAM9AWgBggF+AX0B7AGXAZABjQH2AccBvAG0Af8ByQG9AbUB/wGQAYsBiAHy
        AYABfwF9AesDVgG2A1gBuQNaAb0DDgETIAADOgFgAdYBrAGQAf8BtQGpAaEB9wF/AXwBdwHnAWsCagHb
        A2UB1AFnAWUBZAHWAV4CXQHLAaoBlwGEAfgDOgFiEAADIwEzAaUBYwE5Af8DVQG1A0gBhQMWAR4EAAMU
        ARsDQQFyAW4BZAFhAeQB0QGtAYsB/wHaAbkBmgH/Ad8BwQGkAf8B1gG2AZgB/wM1AVcIAAMFAQcDTAGT
        AagBqwHSAf8B9wH6AfAB/wH9Af4B/AH/AaoBrAGrAfoDRwGBA0UBfQNFAX0DRQF9A0IBcwMyAVADEAEW
        CAADRAF7AasBjAFgAf0BtAFzAUIB/wG9AYgBUQH/AbkBgQFIAf8BrAFlATEB/wGaAZABfwH7AyYBOAMV
        AR0oAAMOARMBkQF+AW4B8wHsAc8BuAH/AaYBnwGaAfUBigGHAYIB7AF/AXwBeAHnAX4BewF5AegBiQF9
        AXIB7gGDAXoBcAHvAw8BFBQAAlgBVgG8AawBaQE8Af8BfQFlAUsB8gFlAWEBWgHcAV8BXAFYAdEBkQFt
        AVEB9wG5AYABSwH/AcYBkQFdAf8BzgGjAXUB/wHNAakBigH/AWwBZgFjAeAB1gG5AZ8B/wM2AVgQAANI
        AYQB7QHwAe4B/wNpAc4DSAGGAx8BLCAAA0QBeQGkAX0BbAH8AcABjQFaAf8BywGfAXIB/wHIAZoBawH/
        AbgBgAFJAf8BlwGHAXoB+AMKAQ4wAAM2AVgBywGgAYgB/wHnAcYBrgH/AdwBxQGwAf4ByAG5AaEB+wHj
        AcYBrQH/AcgBqwGVAf8DNgFZGAADDQESA1UBtQGnAWEBMwH/AasBZgE3Af8BsQFsAT0B/wG0AXABQgH/
        AbQBcgFEAf8BmgFnAVUB+wNYAbkDLQFGAwQBBgNbAcQDPgFqFAADSAGEAdcB2AHXAf8DSgGMA0QBewMH
        AQkcAANEAXkBqQGBAXgB/AGyAYIBVgH/AboBkAFoAf8BvQGUAW4B/wG5AY0BZAH/AZ4BjgGKAfkDDwEU
        NAADKQE/A1QBrwFuAWgBZQHjAW8BaAFlAeIDVAGvAykBPyQAAyMBNAM+AWsDSAGFA0MBeAM0AVQDFgEe
        DAADCQEMAxoBJBgAA0MBdwHOAc8BzQH/AdQC1QH9AwcBChwAAzoBYgGWAZUBkgH3AbUBrQGpAf8BtAGs
        AagB/wGzAawBpwH/AbYBrgGpAf8DewHtAwgBCzwAAw8BFAMPARR0AANDAXcDYgHMAwABARwAAUIBTQE+
        BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/+BAAHMAQEB+QGfAfgB/wHyAf8BwAEBAeABBwHg
        AQMB0AEBAcABAQHgAQcBgAEBATABCQHCAQEB+AEfAYABAwESAQcBwgEBAfgBHwGAAQEBgAEDAeABAQH4
        AR8BgAHBAcABAQH4AQEB+AEfAYMBwQHgAQgB/AEBAfABDwGAAfkB4AGIAQABfwHgAQcBgAEBAYEBzAEA
        AT8B4AEHAYcBgQGAAQcBAQEfAeABBwGDAYEBgAEDAQABHwHgAQcBggEBAYABAwEAAX8B4AEHAcABAQHg
        Af8BAAH/AfABDwHAAQEB8AF/AQAB/wH4AR8B8AE5AfgBfwEAAf8B/gF/Av8B/AF/Cw==
</value>
  </data>
</root>